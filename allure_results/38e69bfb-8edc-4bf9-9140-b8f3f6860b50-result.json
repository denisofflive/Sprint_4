{"name": "Проверяем оформление заказа", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nselenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .//*[contains(@class, 'Button_Middle__1CSJM')]\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:392:5\nelement.find/</<@chrome://remote/content/marionette/element.sys.mjs:275:16", "trace": "self = <tests.test_main_page.TestQaScooterPraktikumServices object at 0x0000025C83133710>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"74c5e5e1-347d-406c-8ab8-7c7534641e4c\")>\nenter_button = \".//*[contains(@class, 'Button_Middle__1CSJM')]\", station = 'Сокольники', name = 'Марина', last_name = 'Денисова', address_to_take = 'Москва, ул Заречная 13 кв 27', phone_number = '89997774444'\ndate = '11.09.2023', index = 6, color_index = 1, message = 'Привозите после 12:00'\n\n    @pytest.mark.order\n    @pytest.mark.xfail  # in browser Chrome fail\n    @pytest.mark.parametrize('enter_button, station, name, last_name, address_to_take, '\n                             'phone_number, date, index, color_index, message',\n                             [pytest.param(MainPageLocators.HEADER_BUTTON_ORDER[1],\n                                           \"Преображенская площадь\", \"Денис\", \"Денисов\",\n                                           \"Москва, ул Большая 213 кв 7\", \"89771234567\",\n                                           \"09.05.2023\", 1, 0, \"Привозите после 12:00\"),\n    \n                              pytest.param(MainPageLocators.MIDDLE_BUTTON_ORDER[1],\n                                           \"Сокольники\", \"Марина\", \"Денисова\",\n                                           \"Москва, ул Заречная 13 кв 27\", \"89997774444\",\n                                           \"11.09.2023\", 6, 1, \"Привозите после 12:00\")])\n    @allure.title(\"Проверяем оформление заказа\")\n    def test_order(self, driver, enter_button, station, name, last_name,\n                   address_to_take, phone_number, date, index, color_index, message):\n        ActionOnPage().accept_cookie(driver)\n>       MainPage().click_order(driver, enter_button)\n\ntests\\test_main_page.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject\\Pages.py:61: in click_order\n    driver.find_element(By.XPATH, f\"{xpath_element}\").click()\nE:\\Sprint_4_Final\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nE:\\Sprint_4_Final\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025C831B9610>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .//*[contains(@clas...red/webdriver/Errors.sys.mjs:392:5\\\\nelement.find/</<@chrome://remote/content/marionette/element.sys.mjs:275:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .//*[contains(@class, 'Button_Middle__1CSJM')]\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:392:5\nE       element.find/</<@chrome://remote/content/marionette/element.sys.mjs:275:16\n\nE:\\Sprint_4_Final\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException"}, "steps": [{"name": "Кликаем кнопку 'Заказать'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .//*[contains(@class, 'Button_Middle__1CSJM')]\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:392:5\nelement.find/</<@chrome://remote/content/marionette/element.sys.mjs:275:16\n\n", "trace": "  File \"E:\\Sprint_4_Final\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"F:\\Sprint_4\\PageObject\\Pages.py\", line 61, in click_order\n    driver.find_element(By.XPATH, f\"{xpath_element}\").click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Sprint_4_Final\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Sprint_4_Final\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"E:\\Sprint_4_Final\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "driver", "value": "<selenium.webdriver.firefox.webdriver.WebDriver (session=\"74c5e5e1-347d-406c-8ab8-7c7534641e4c\")>"}, {"name": "xpath_element", "value": "'.//*[contains(@class, 'Button_Middle__1CSJM')]'"}], "start": 1683194769257, "stop": 1683194769300}], "parameters": [{"name": "enter_button", "value": "'.//*[contains(@class, 'Button_Middle__1CSJM')]'"}, {"name": "station", "value": "'Сокольники'"}, {"name": "name", "value": "'Марина'"}, {"name": "last_name", "value": "'Денисова'"}, {"name": "address_to_take", "value": "'Москва, ул Заречная 13 кв 27'"}, {"name": "phone_number", "value": "'89997774444'"}, {"name": "date", "value": "'11.09.2023'"}, {"name": "index", "value": "6"}, {"name": "color_index", "value": "1"}, {"name": "message", "value": "'Привозите после 12:00'"}], "start": 1683194769005, "stop": 1683194769302, "uuid": "b901e7f7-7395-4ab6-9832-258c4f5b5a16", "historyId": "a281029691c8d93fd5fa05d0c26ac64d", "testCaseId": "c28d564c079123db27c318d825ed1358", "fullName": "test_main_page.TestQaScooterPraktikumServices#test_order", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "tag", "value": "order"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestQaScooterPraktikumServices"}, {"name": "host", "value": "DENISOFF"}, {"name": "thread", "value": "7396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main_page"}]}